import pandas as pd
import json
from pathlib import Path
from modules import utilities as ut


# my_excel = ut.FileIOUtilities(wb_file)
# wb = {}

### 

# filter sample info
# my_excel.sheet_name="Info"
# my_excel.load_excel()
# sample_info = my_excel.extract_value_data(rows = "1:11", 
#                                           columns = "0:2")
# field_info = my_excel.extract_value_data(rows = "1:12", 
#                                          columns = "3:6")
# wb[my_excel.sheet_name] = {
#                             "sample_info" : sample_info, 
#                             "field_info" : field_info
#                                 }

wb_file = Path(r"G:/My Drive/_studenti/2025 Jurica Kovacic/excel_templates/Gas-condensate WS template/Gas-condensate wellstream template.xlsx")
my_excel = ut.FileIOUtilities(wb_file, sheet_name="Term.Exp.")
my_excel.load_excel(header=None)

# Append value_data
my_excel.isTable = False
my_excel.extract_value_data(rows="2,11", columns="2,5")  # Rows 2,11; cols B,E
print("Term.Exp. value data appended:")
print(my_excel.subset)

# Append table_data
my_excel.isTable = True
my_excel.extract_value_data(rows="5:9", columns="2:4", title="Term.exp Table 1")  # Rows 5-8, cols B-D
my_excel.data_header(2, title="Term.exp Table 1")  # Headers from rows 3-4
my_excel = ut.FileIOUtilities(wb_file, sheet_name="Term.Exp.")
my_excel.load_excel(header=None)


wb_dictionary = my_excel.wb_dictionary



# sheet="CCE 1"
# df = pd.read_excel(wb_file, sheet_name=sheet)
# value_data = df.iloc[[1, 10],[1,4]]


# print (dict_to_html(wb))





# subset = df.iloc[1:15, 0:6]

# # Ukloni sve `NaN` vrijednosti iz redova (ali ne briše red)
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# # Term.Exp.
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="Term.Exp."
# )

# subset = df.iloc[1:11, 0:6]

# # Ukloni sve `NaN` vrijednosti iz redova (ali ne briše red)
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# # CCE1
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="CCE 1"
# )

# subset = df.iloc[1:44, 0:16]

# # Pretvori sve vrijednosti u string (uključuje datetime, NaN, float itd.)
# subset = subset.astype(str)
# subset = subset.replace("nan", "")
# # Pretvori u listu redova
# data = subset.values.tolist()
# # Ukloni prazne redove (ako su svi elementi prazni)
# data = [row for row in data if any(cell.strip() for cell in row)]
# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# #CCE Flash
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="CCE Flash"
# )

# subset = df.iloc[0:25, 0:12]
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# #Flash Gas Comp
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="Flash Gas Comp"
# )
# subset = df.iloc[0:35, 0:5]
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# #Sep Gas Comp
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="Sep Gas Comp"
# )
# subset = df.iloc[0:35, 0:5]
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# #Sep Liquid 
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="Sep Liquid"
# )
# subset = df.iloc[0:47, 0:17]
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# #Well stream 
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="Well stream"
# )
# subset = df.iloc[0:47, 0:13]
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# #Report Comp 
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="Report Comp"
# )
# subset = df.iloc[0:60, 0:14]
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)

# #Report Volumetric 
# df = pd.read_excel(
#     r"C:/Users/Lenovo/Desktop/Faks/Diplomski/excel_templates/Gas-condensateWStemplate/Gas-condensate wellstream template.xlsx",
#     sheet_name="Report Volumetric"
# )
# subset = df.iloc[0:13, 0:4]
# data = [[cell for cell in row if pd.notna(cell)] for row in subset.values.tolist()]
# data = [row for row in data if row]  # izbaci potpuno prazne redove

# json_data = json.dumps(data, indent=4, ensure_ascii=False)
# print(json_data)